@startuml

class InventoryTracker {
    start()
    main()
}

class MainWindowController {
    items: ItemModel
    scenes: SceneManager
    fileManager: FileManager

    + MainWindowController(ItemModel, SceneManager)

    addItemButtonClicked(EventHandler)
    editItemButtonClicked(EventHandler)
    deleteSelectedItemButtonClicked(EventHandler)

    menuItemSaveAsClicked(EventHandler)
    saveInventoryAsTSV(filename: String)
    saveInventoryAsHTML(filename: String)
    saveInventoryAsJSON(filename: String)

    menuItemOpenFileClicked(EventHandler)
    loadInventoryAsTSV(filename: String)
    loadInventoryAsHTML(filename: String)
    loadInventoryAsJSON(filename: String)

    addItem(String, String, Double)
    deleteItem()
    editItem()

    saveInventoryAsTSV(filename: String)
    saveInventoryAsHTML(filename: String)
    saveInventoryAsJSON(filename: String)
}

class FileManager {
    saveAsTSV(filename: String, data: String)
    saveAsJSON(filename: String, data: String)
    saveAsHTML(filename: String, data: String)
}

class UpdateItemWindowController {
    - itemModel: ItemModel
    - selectedItem: Item
    - inValidator: InputValidator

    updateItemButtonClicked(EventHandler)
    + editItem(serialNumber: String, name: String, price: Double)

}

class InputValidator {
    + isValidName(name: String)
    + isValidSerialNumber(serialNumber: String)
    + containsSerialNumber(itemModel: ItemModel, serialNumber: String)
}


class ItemModel {
    - ObservableList<Item>

    /' ObservableList is not serializable
       Copying everything over a normal list
       Use Gson on that normal list '/

     + getItems()
}

class Item {
    - name: SimpleStringProperty
    - serialNumber: SimpleStringProperty
    - value: SimpleDoubleProperty

    + getName()
    + setName()
    + getSerialNumber()
    + setSerialNumber()
    + getValue()
    + setValue()
    + convertItemToTSVString()
}

openjfx.org.Application <|-- InventoryTracker
InventoryTracker -- MainWindowController
MainWindowController -- ItemModel
MainWindowController -- UpdateItemWindowController
MainWindowController -- InputValidator
UpdateItemWindowController -- InputValidator
UpdateItemWindowController -- ItemModel
ItemModel -- Item
MainWindowController -- FileManager

@enduml